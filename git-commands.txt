Useful Git Shell commands:

git reset --hard HEAD
**Resets the project to the state after your last sync. Use this to wipe your changes so you can grab a new update.

git reset --hard HEAD^
**Resets the project to the state of the sync BEFORE your last sync. Use this if Git thinks you have the latest updates, but your copy is corrupt for some reason.

git stash
**Takes your changes and saves them to a "stash stack". Use this instead of copying to Notepad, so you can get the latest update without losing your work.

git stash apply
**Applies the changes last saved with "git stash" to your project while leaving the changes on the stash stack. Use this after stashing your changes, then syncing, to merge your changes with the newly updated project. Note that because Git tracks .class files by default, it will complain when it can't merge these. This is fine. Note also that the merging process is imperfect and can produce corrupted source files. Fix this with "git reset --hard HEAD^", sync, and try again.

git stash drop
**Removes the latest changes (i.e. the "top stash") from the stash stack. Use this after confirming a successful merge from "git stash apply".

git stash pop
**Essentially a shortcut for "git stash apply, then git stash drop". Listed here for completeness, but given the potential for issues, just use the apply and drop commands manually.